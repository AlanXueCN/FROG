(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[38],{

/***/ "../ac/ac-select/src/ActivityRunner.js":
/*!*********************************************!*\
  !*** ../ac/ac-select/src/ActivityRunner.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"../node_modules/react/index.js\"));\n\nvar _frogUtils = __webpack_require__(/*! frog-utils */ \"../frog-utils/src/index.js\");\n\nvar _lodash = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\");\n\nvar _Highlighter = _interopRequireDefault(__webpack_require__(/*! ./Highlighter */ \"../ac/ac-select/src/Highlighter.js\"));\n\nvar _ColorSelect = _interopRequireDefault(__webpack_require__(/*! ./ColorSelect */ \"../ac/ac-select/src/ColorSelect.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar TextToColor = function TextToColor(text) {\n  var c = Number(text.toLowerCase().split('').reduce(function (acc, cur) {\n    return acc + cur.charCodeAt();\n  }, ''));\n  var obj = {\n    r: 90 + Math.floor(c % (166 * 166 * 166) / (166 * 166)),\n    g: 90 + Math.floor(c % (166 * 166) / 166),\n    b: 90 + c % 166\n  };\n  return 'rgb(' + obj.r + ',' + obj.g + ',' + obj.b + ')';\n};\n\nvar unicodeWordRegexp = new RegExp(\"\".concat(_frogUtils.notUnicodeLetter, \"(\").concat(_frogUtils.unicodeLetter, \"+)\").concat(_frogUtils.notUnicodeLetter), 'ui');\nvar unicodeWordRegexpBeg = new RegExp(\"^(\".concat(_frogUtils.unicodeLetter, \"+)\").concat(_frogUtils.notUnicodeLetter), 'ui');\nvar unicodeWordRegexpEnd = new RegExp(\"\".concat(_frogUtils.notUnicodeLetter, \"(\").concat(_frogUtils.unicodeLetter, \"+)$\"), 'ui');\nvar unicodeWordRegexpBegEnd = new RegExp(\"^(\".concat(_frogUtils.unicodeLetter, \"+)$\"), 'ui');\n\nvar ActivityRunner = function ActivityRunner(_ref) {\n  var activityData = _ref.activityData,\n      data = _ref.data,\n      dataFn = _ref.dataFn,\n      logger = _ref.logger;\n  var wordPhrases = activityData.config.wordPhrases && (0, _lodash.compact)(activityData.config.wordPhrases.map(function (x) {\n    return x && x.trim().toLowerCase();\n  }));\n  var wordPhrasesRegExp = !(0, _lodash.isEmpty)(wordPhrases) && new RegExp(wordPhrases.join('|'), 'gui');\n\n  var selectPenColor = function selectPenColor(color) {\n    return dataFn.objReplace(data.currentColor, color, 'currentColor');\n  };\n\n  var onClick = function onClick() {\n    var s = window.getSelection();\n\n    if (s.isCollapsed) {\n      s.modify('move', 'forward', 'character');\n      s.modify('move', 'backward', 'word');\n      s.modify('extend', 'forward', 'word');\n      var sStr = s.toString().trim().toLowerCase();\n      var c = -1;\n\n      if (wordPhrases && !(0, _lodash.isEmpty)(wordPhrases)) {\n        do {\n          c += 1;\n          var wF = wordPhrases[c];\n\n          if (wF.includes(sStr)) {\n            var words = wF.split(' ');\n            var idx = words.indexOf(sStr);\n            (0, _lodash.times)(idx + 1, function () {\n              return s.modify('move', 'backward', 'word');\n            });\n            (0, _lodash.times)(words.length, function () {\n              return s.modify('extend', 'forward', 'word');\n            });\n            sStr = s.toString().trim().toLowerCase();\n            (0, _lodash.times)(idx, function () {\n              return s.modify('move', 'forward', 'word');\n            });\n          }\n        } while (c < wordPhrases.length - 1 && sStr !== wordPhrases[c]);\n      }\n\n      s.modify('move', 'forward', 'character'); // clear selection\n\n      var sel = wordPhrasesRegExp && sStr.match(wordPhrasesRegExp) || sStr.match(unicodeWordRegexpBegEnd) || sStr.match(unicodeWordRegexpBeg) || sStr.match(unicodeWordRegexpEnd) || sStr.match(unicodeWordRegexp);\n      var selectedRaw = sel && (sel[1] || sel[0]);\n\n      if (!selectedRaw) {\n        return;\n      }\n\n      var selected = selectedRaw.toLowerCase().trim();\n\n      if (data['highlighted'][selected] === undefined) {\n        dataFn.objInsert({\n          color: activityData.config.multi ? TextToColor(selected) : data.currentColor\n        }, ['highlighted', selected]);\n        logger({\n          type: 'plus',\n          value: selected\n        });\n      } else {\n        dataFn.objDel(data['highlighted'][selected], ['highlighted', selected]);\n        logger({\n          type: 'minus',\n          value: selected\n        });\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, activityData.config.chooseColor && React.createElement(_ColorSelect.default, {\n    data: data,\n    selectPenColor: selectPenColor\n  }), React.createElement(\"div\", {\n    onClick: onClick,\n    style: {\n      height: '100%',\n      overflow: 'scroll',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '20px',\n      fontSize: '1.5em',\n      lineHeight: '150%',\n      fontFamily: 'serif',\n      whiteSpace: 'pre-wrap'\n    }\n  }, React.createElement(_Highlighter.default, {\n    searchWords: data['highlighted'],\n    textToHighlight: activityData.config ? activityData.config.title || '' : '',\n    highlightStyle: {\n      fontSize: 'xx-large',\n      cursor: 'help'\n    },\n    unhighlightStyle: {\n      fontSize: 'xx-large',\n      cursor: 'help'\n    }\n  }), React.createElement(\"br\", null), activityData.config.text && React.createElement(_Highlighter.default, {\n    searchWords: data['highlighted'],\n    highlightStyle: {\n      cursor: 'help'\n    },\n    unhighlightStyle: {\n      cursor: 'help'\n    },\n    textToHighlight: activityData.config.text\n  })));\n};\n\nvar _default = ActivityRunner;\nexports.default = _default;\n\n//# sourceURL=webpack:///../ac/ac-select/src/ActivityRunner.js?");

/***/ })

}]);